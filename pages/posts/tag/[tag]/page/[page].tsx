import Pagination from '@/components/Pagination/Pagination';
import SinglePost from '@/components/Post/SinglePost';
import Tag from '@/components/Tag/Tag';
import { getAllTags, getNumberOfPagesByTag, getPostByTagAndPage } from '@/lib/notionAPI';
import { GetStaticPaths, GetStaticProps } from 'next';
import { Inter } from 'next/font/google';
import Head from 'next/head';

export const getStaticPaths: GetStaticPaths = async () => {
  const allTags = await getAllTags();
  let params = [];

  await Promise.all(
    allTags.map((tag: string) => {
      return getNumberOfPagesByTag(tag).then((numberOfPageByTag: number) => {
        for (let i = 1; i <= numberOfPageByTag; i++) {
          params.push({ params: { tag: tag, page: i.toString() } });
        }
      });
    })
  );

  return {
    paths: params,
    fallback: 'blocking',
  };
};

export const getStaticProps: GetStaticProps = async (context) => {
  const currentPage: string = context.params?.page.toString();
  const currentTag: string = context.params?.tag.toString();

  const upperCaseCurrentTag = currentTag.charAt(0).toUpperCase() + currentTag.slice(1);

  const posts = await getPostByTagAndPage(upperCaseCurrentTag, parseInt(currentPage, 10));

  const numberOfPagesByTag = await getNumberOfPagesByTag(upperCaseCurrentTag);

  const allTags = await getAllTags();

  return {
    props: {
      posts,
      numberOfPagesByTag,
      currentTag,
      allTags,
    },
    revalidate: 60 * 60 * 6,
  };
};

const inter = Inter({ subsets: ['latin'] });

const BlogTagPageList = ({ numberOfPagesByTag, posts, currentTag, allTags }) => {
  return (
    <div className="container h-full w-full mx-auto">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container w-full mt-16">
        <h1 className="text-5xl font-medium text-center mb-16">Notion BlogðŸš€</h1>
        <section className="sm: grid grid-cols-2 w-5/6 gap-3 mx-auto">
          {posts.map((post, index) => (
            <div key={post.id}>
              <SinglePost title={post.title} description={post.description} date={post.date} tags={post.tags} slug={post.slug} isPaginationPage={true} />
            </div>
          ))}
        </section>
        <Pagination numberOfPage={numberOfPagesByTag} tag={currentTag} />
        <Tag tags={allTags} />
      </main>
    </div>
  );
};

export default BlogTagPageList;
